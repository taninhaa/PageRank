#!/bin/bash
#YOoo c'est le script de Tania et Bastien !!

ChercheID(){
    #Retourne les ID en lien avec le mot recherché
    ID=$(grep "\\b$1\\b" ~/../../usr/share/wikisearch/data/id-titre.txt | awk -F'\t' '{print $1}')
      
    #Retourne une liste avec (id1,valueid1,id2,valueid2, ...)
    IDPagerank=()
    for id in $ID
    do
        IDPagerank+=($(grep "^$id\\b" ~/../../usr/share/wikisearch/data/pagerank.txt))
    done

}

PrintSelect(){
    #Affichage des 5 meilleurs
    i=1
    for id in $*
    do
        echo -n "$i >> " #Affiche le numéro 
        awk -v a=$id -F'\t' 'BEGIN{a++} NR == a {print $2}' ~/../../usr/share/wikisearch/data/id-titre.txt #Affiche le titre pour chaque ID
        i=$((i+1))
    done

    #Selection pour l'affichage du résumé
    echo "(Enter the number of the wanted page for a short summary)"

    read num 	#Lis le numéro tapé par l'utilisateur
    nbId=$(echo "^[1-"$(echo $*|wc -w)"]$") #Pour savoir si le numéro tapé est entre 1 et 5
    
    while ! [ $(echo $num | grep $nbId| wc -l) -eq "1" ]; do
        echo "Error : no matching title for \"$num\"" 
        read num
    done
    
    selection=$(echo $* | awk -v a=$num '{print $a}') #Prend la selection de l'utilisateur (ID)
    
    title=$(awk -v a=$selection -F'\t' 'BEGIN{a++} NR == a {print $0}' ~/../../usr/share/wikisearch/data/id-titre.txt) #Stocke le titre associé à la selection 
    
    python3 ~/../../usr/share/wikisearch/code/selecteur.py $title #On affiche le résumé de la selection
    echo "--"
    echo "Press i for more information on wikipedia"
    echo "Press q to quit"
    read info
    if [ $info = "i" ];then
        ~/../../usr/share/wikisearch/code/open_page $title
    fi
}

DefaultPageRank(){
    ChercheID $1
    #Si le titre retourne au moins un ID, on affiche le(s) meilleur(s)
    if test -n "$ID"; then  
        #Les ID sont triés par valeur du Pagerank et on retourne les 5 meilleurs
        BestId=$(~/../../usr/share/wikisearch/code/triPagerank ${IDPagerank[*]})
        #Affiche les 5 meilleurs et permet la sélection d'un d'entre eux pour un résumé
        PrintSelect $BestId
        
    else
        echo "Error : no result for «$1»."
    fi
}

PersonalisedPagerank(){
    ID=$(grep "\\b$1\\b" ~/../../usr/share/wikisearch/data/id-titre.txt | awk -F'\t' '{print $1}')

    if test -n "$ID"; then  
        #Calcule le pagerank perso et retourne les 5 meilleurs ID
        BestId=$(python3 ~/../../usr/share/wikisearch/code/api_pagerank_perso.py $ID)
        #Affiche les 5 meilleurs et permet la sélection d'un d'entre eux pour un résumé
        PrintSelect $BestId
        
    else
         echo "Error : no result for «$1»."
    fi
}

#======= MAIN ========

#Si le titre $1 n'est pas vide on cherche les ID
if test -n "$1"; then
    if [ "$1" = "-perso" ] || [ "$1" = "-p" ]; then

        if test -n "$2"; then
            echo "Personalised Pagerank ..."
            PersonalisedPagerank $2
        else
            echo "Error : One argument is missing."
            echo "Try : wikisearch [-perso|-p] Hello"
        fi

    else
        DefaultPageRank $1
    fi
    
else
    echo "Error : No argument."
    echo "wikisearch expects a title suggestion for the search."
    echo "For example, try «wikisearch [-perso|-p] Hello»."
fi

#awk -v a=$1 'BEGIN{var=a} ($2 ~ (a)) {print $1,$2}' id-titre.txt

exit 0
